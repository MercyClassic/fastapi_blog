services:
  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - ../backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -d postgres' || exit 1" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 3s
  blog:
    container_name: blog
    restart: always
    build:
      context: ../backend
    volumes:
      - ../backend/src/media:/blog/src/media
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ../backend/src/media:/var/blog/media
      - ../frontend/build:/var/blog/build
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: [ "CMD", "service", "nginx", "status" ]
      interval: 1m
      timeout: 10s
      retries: 10
      start_period: 1s
  celery:
    build:
      context: ../backend
    container_name: celery
    restart: always
    depends_on:
      redis:
        condition: service_healthy
    command: celery -A main.config worker -l info
    healthcheck:
      test: [ "CMD", "executable" ]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 1s
  flower:
    build:
      context: ../backend
    container_name: flower
    restart: always
    depends_on:
      - celery
    ports:
      - "5555:5555"
    command: celery -A main.config flower -l info
  redis:
    container_name: redis
    hostname: redis
    image: redis
    restart: always
    command: redis-server
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping", "|| exit 1" ]
      interval: 3s
      timeout: 5s
      retries: 30
      start_period: 1s
volumes:
  postgres_data:
